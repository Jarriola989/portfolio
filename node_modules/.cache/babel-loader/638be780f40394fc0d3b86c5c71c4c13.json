{"ast":null,"code":"var _jsxFileName = \"/Users/janeth/Documents/Github/portfolio/src/components/FrameworksPanel.js\";\nimport React, { Component } from \"react\";\nimport react from \"../images/frameworks/react.png\";\nimport node from \"../images/frameworks/node.jpg\";\nimport springboot from \"../images/frameworks/springboot.png\";\nimport prisma from \"../images/frameworks/prisma.png\";\nimport redis from \"../images/frameworks/redis.jpg\";\n\nclass FrameworksPanel extends Component {\n  constructor() {\n    super();\n\n    this.openPanel = div => {\n      const panelOptions = [\"react\", \"node\", \"springboot\", \"prisma\", \"yoga\"];\n      const panelsToClose = panelOptions.filter(option => {\n        return option !== div.target.alt;\n      });\n\n      if (this.state[div.target.alt] === \"close\") {\n        this.setState({\n          [div.target.alt]: \"open\"\n        });\n        panelsToClose.map(panel => {\n          return this.setState({\n            [panel]: \"close\"\n          });\n        });\n      } else {\n        this.setState({\n          [div.target.alt]: \"close\"\n        });\n      }\n    };\n\n    this.state = {\n      react: \"close\",\n      node: \"close\",\n      prisma: \"close\",\n      springboot: \"close\",\n      yoga: \"close\"\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"panel-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: this.state.react,\n      onClick: this.openPanel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: react,\n      alt: \"react\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: this.state.node,\n      onClick: this.openPanel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: node,\n      alt: \"node\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: this.state.springboot,\n      onClick: this.openPanel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: springboot,\n      alt: \"springboot\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: this.state.prisma,\n      onClick: this.openPanel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: prisma,\n      alt: \"prisma\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: this.state.yoga,\n      onClick: this.openPanel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: redis,\n      alt: \"redis\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default FrameworksPanel;","map":{"version":3,"sources":["/Users/janeth/Documents/Github/portfolio/src/components/FrameworksPanel.js"],"names":["React","Component","react","node","springboot","prisma","redis","FrameworksPanel","constructor","openPanel","div","panelOptions","panelsToClose","filter","option","target","alt","state","setState","map","panel","yoga","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport react from \"../images/frameworks/react.png\";\nimport node from \"../images/frameworks/node.jpg\";\nimport springboot from \"../images/frameworks/springboot.png\";\nimport prisma from \"../images/frameworks/prisma.png\";\nimport redis from \"../images/frameworks/redis.jpg\";\n\nclass FrameworksPanel extends Component {\n  constructor() {\n    super();\n    this.state = {\n      react: \"close\",\n      node: \"close\",\n      prisma: \"close\",\n      springboot: \"close\",\n\n      yoga: \"close\"\n    };\n  }\n\n  openPanel = div => {\n    const panelOptions = [\"react\", \"node\", \"springboot\", \"prisma\", \"yoga\"];\n    const panelsToClose = panelOptions.filter(option => {\n      return option !== div.target.alt;\n    });\n    if (this.state[div.target.alt] === \"close\") {\n      this.setState({\n        [div.target.alt]: \"open\"\n      });\n      panelsToClose.map(panel => {\n        return this.setState({\n          [panel]: \"close\"\n        });\n      });\n    } else {\n      this.setState({\n        [div.target.alt]: \"close\"\n      });\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"panel-container\">\n        <div className={this.state.react} onClick={this.openPanel}>\n          <img src={react} alt=\"react\" />\n        </div>\n        <div className={this.state.node} onClick={this.openPanel}>\n          <img src={node} alt=\"node\" />\n        </div>\n        <div className={this.state.springboot} onClick={this.openPanel}>\n          <img src={springboot} alt=\"springboot\" />\n        </div>\n        <div className={this.state.prisma} onClick={this.openPanel}>\n          <img src={prisma} alt=\"prisma\" />\n        </div>\n        <div className={this.state.yoga} onClick={this.openPanel}>\n          <img src={redis} alt=\"redis\" />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default FrameworksPanel;\n"]},"metadata":{},"sourceType":"module"}